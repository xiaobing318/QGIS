file(GLOB UI_FILES *.ui)

PLUGIN_INSTALL(processing ./ui ${UI_FILES})

#[[
杨小兵-2024-04-25
一、解释
  上述的 CMake 命令是用于处理与插件相关的 UI 文件和安装配置的。下面是对这两个命令的详细解释：

### 1. `file(GLOB UI_FILES *.ui)`
  这个命令是使用 CMake 的 `file(GLOB ...)` 指令来查找并列出所有在当前目录下扩展名为 `.ui` 的文件。这些 `.ui` 文件通常是用于 Qt 应用程序的用户界面
布局文件，这些文件通过 Qt Designer 创建。这个命令将所有匹配的 `.ui` 文件赋值给变量 `UI_FILES`。
- `file`：CMake 的指令，用于对文件执行操作。
- `GLOB`：这个参数告诉 CMake 执行文件名的模式匹配。它将列出所有符合指定模式的文件。
- `UI_FILES`：这是一个变量，用来存储匹配到的文件路径列表。
- `*.ui`：这是一个通配符模式，匹配当前目录下所有以 `.ui` 结尾的文件。

### 2. `PLUGIN_INSTALL(processing ./ui ${UI_FILES})`
  这个命令看起来像是一个自定义的 CMake 宏或者函数，用于将特定的文件安装到指定的目标路径。不过，`PLUGIN_INSTALL` 不是 CMake 原生支持的命令，这意味着
它可能在你的 CMake 项目中被定义为一个宏或者函数，专门用于处理特定的安装逻辑。
- `PLUGIN_INSTALL`：这是一个宏或函数，需要在其他地方在 CMake 脚本中有定义。
- `processing`：这很可能是一个参数，指示安装过程中某种特定的处理或分类。
- `./ui`：这是目标安装路径的相对路径，表示安装到当前项目路径下的 `ui` 目录。
- `${UI_FILES}`：这是前面 `file(GLOB ...)` 命令找到的所有 `.ui` 文件的列表。
  总的来说，这段 CMake 脚本的作用是找到所有的 `.ui` 文件，并通过一个自定义的安装脚本或宏将它们安装到项目的 `ui` 目录中。这通常是为了组织项目结构，确
保 UI 文件在运行时可以正确找到。如果你需要了解更多关于 `PLUGIN_INSTALL` 的细节，你需要查找它在你的 CMake 项目中的定义。
]]